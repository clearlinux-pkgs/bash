We prefer bash not to do dlopen

.. we're not shipping .so's for it, so it can only be a security
liability

--- bash-5.2/configure~	2022-09-23 14:13:22.000000000 +0000
+++ bash-5.2/configure	2022-09-27 14:50:43.237581443 +0000
@@ -16675,70 +16675,6 @@
 
 
 
-if test "$opt_static_link" != yes; then
-{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl" >&5
-printf %s "checking for dlopen in -ldl... " >&6; }
-if test ${ac_cv_lib_dl_dlopen+y}
-then :
-  printf %s "(cached) " >&6
-else $as_nop
-  ac_check_lib_save_LIBS=$LIBS
-LIBS="-ldl  $LIBS"
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-/* Override any GCC internal prototype to avoid an error.
-   Use char because int might match the return type of a GCC
-   builtin and then its argument prototype would still apply.  */
-char dlopen ();
-int
-main (void)
-{
-return dlopen ();
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_link "$LINENO"
-then :
-  ac_cv_lib_dl_dlopen=yes
-else $as_nop
-  ac_cv_lib_dl_dlopen=no
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.beam \
-    conftest$ac_exeext conftest.$ac_ext
-LIBS=$ac_check_lib_save_LIBS
-fi
-{ printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen" >&5
-printf "%s\n" "$ac_cv_lib_dl_dlopen" >&6; }
-if test "x$ac_cv_lib_dl_dlopen" = xyes
-then :
-  printf "%s\n" "#define HAVE_LIBDL 1" >>confdefs.h
-
-  LIBS="-ldl $LIBS"
-
-fi
-
-ac_fn_c_check_func "$LINENO" "dlopen" "ac_cv_func_dlopen"
-if test "x$ac_cv_func_dlopen" = xyes
-then :
-  printf "%s\n" "#define HAVE_DLOPEN 1" >>confdefs.h
-
-fi
-ac_fn_c_check_func "$LINENO" "dlclose" "ac_cv_func_dlclose"
-if test "x$ac_cv_func_dlclose" = xyes
-then :
-  printf "%s\n" "#define HAVE_DLCLOSE 1" >>confdefs.h
-
-fi
-ac_fn_c_check_func "$LINENO" "dlsym" "ac_cv_func_dlsym"
-if test "x$ac_cv_func_dlsym" = xyes
-then :
-  printf "%s\n" "#define HAVE_DLSYM 1" >>confdefs.h
-
-fi
-
-fi
 
 if test "$ac_cv_func_inet_aton" != 'yes'; then
 
